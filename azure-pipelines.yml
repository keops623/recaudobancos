trigger:
- develop

pool:
  vmImage: ubuntu-latest

# Variables
variables:
  nombreImagen: imgserviciobancodevops

steps:
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--output publish_output --configuration Release'

  - task: SonarQubePrepare@4
    enabled: true
    inputs:
      SonarQube: 'Sonar_Corona'
      scannerMode: 'MSBuild'
      cliProjectKey: 'RecaudosServicioBanco'
      cliProjectName: 'RecaudosServicioBanco'
  
  - task: SonarQubeAnalyze@4

  - task: sonar-buildbreaker@8
    inputs:
      SonarQube: 'Sonar_Corona'

  - task: SonarQubePublish@4
    inputs:
      pollingTimeoutSec: '300'

  - task: DotNetCoreCLI@2
    # displayName: Publish
    inputs:
      command: 'publish'
      publishWebProjects: true
      arguments: '-c Release -o $(System.DefaultWorkingDirectory)/publish/project'
      zipAfterPublish: false
      modifyOutputPath: false
      workingDirectory: '$(System.DefaultWorkingDirectory)/'

  - task: ArchiveFiles@2
    inputs: 
      rootFolderOrFile: '$(Build.BinariesDirectory)'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      replaceExistingArchive: true

  # - task: Docker@2
    # inputs:
      # containerRegistry: 'Dev_Recaudos_Pagos_Corona_Registry'
      # repository: $(nombreImagen)
      # command: 'buildAndPush'
      # Dockerfile: 'Dockerfile'