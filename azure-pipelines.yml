trigger:
- develop

pool:
  vmImage: ubuntu-latest

# Variables
variables:
  nombreImagen: crrecaudospagoscorona.azurecr.io/imgserviciobancodevops:$(build.buildId)
  conexionSonar: Sonar_Corona
  sonarProjectKey: RecaudosServicioBanco
  sonarProjectName: RecaudosServicioBanco

steps:
  - task: SonarQubePrepare@4
    enabled: true
    inputs:
      SonarQube: $(conexionSonar)
      scannerMode: 'MSBuild'
      ProjectKey: $(sonarProjectKey)
      ProjectName: $(sonarProjectName)

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--output publish_output --configuration Release'
  
  - task: dependency-check-build-task@6
    inputs:
      projectName: $(sonarProjectName)
      scanPath: '**/*.csproj'
      format: 'HTML'
      failOnCVSS: '10'
  
  - task: OWASPDependencyCheck@0
    inputs:
      outputDirectory: '$(Agent.TempDirectory)/dependency-scan-results'
      scanDirectory: '$(Build.SourcesDirectory)'
      outputFormat: 'HTML'
      useSonarQubeIntegration: true
  
  - task: SonarQubeAnalyze@4

  - task: sonar-buildbreaker@8
    inputs:
      SonarQube: $(conexionSonar)

  - task: SonarQubePublish@4
    inputs:
      pollingTimeoutSec: '300'

  - task: DotNetCoreCLI@2
    # displayName: Publish
    inputs:
      command: 'publish'
      publishWebProjects: true
      arguments: '-c Release -o $(System.DefaultWorkingDirectory)/publish/project'
      zipAfterPublish: false
      modifyOutputPath: false
      workingDirectory: '$(System.DefaultWorkingDirectory)/'

  - task: ArchiveFiles@2
    inputs: 
      rootFolderOrFile: '$(Build.BinariesDirectory)'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      replaceExistingArchive: true

  - task: Docker@2
    inputs:
      containerRegistry: 'Dev_Recaudos_Pagos_Corona_Registry'
      repository: $(nombreImagen)
      command: 'buildAndPush'
      Dockerfile: 'Dockerfile'

  - task: AzureFunctionAppContainer@1
    inputs:
      azureSubscription: 'Dev_Recaudos_Pagos_Corona_QA'
      appName: 'RecaudosPagosCorona'
      imageName: '$(nombreImagen)'

  